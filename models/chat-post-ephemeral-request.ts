/*
Slack Web API

One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

The version of the OpenAPI document: 1.7.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * 
 * @export
 * @interface ChatPostEphemeralRequest
 */
export interface ChatPostEphemeralRequest {
    /**
     * Pass true to post the message as the authed user. Defaults to true if the chat:write:bot scope is not included. Otherwise, defaults to false.
     * @type {boolean}
     * @memberof ChatPostEphemeralRequest
     */
    'as_user'?: boolean;
    /**
     * A JSON-based array of structured attachments, presented as a URL-encoded string.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'attachments'?: string;
    /**
     * A JSON-based array of structured blocks, presented as a URL-encoded string.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'blocks'?: string;
    /**
     * Channel, private group, or IM channel to send message to. Can be an encoded ID, or a name.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'channel': string;
    /**
     * Emoji to use as the icon for this message. Overrides `icon_url`. Must be used in conjunction with `as_user` set to `false`, otherwise ignored. See [authorship](https://slack.dev) below.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'icon_emoji'?: string;
    /**
     * URL to an image to use as the icon for this message. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](https://slack.dev) below.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'icon_url'?: string;
    /**
     * Find and link channel names and usernames.
     * @type {boolean}
     * @memberof ChatPostEphemeralRequest
     */
    'link_names'?: boolean;
    /**
     * Change how messages are treated. Defaults to `none`. See [below](https://slack.dev).
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'parse'?: string;
    /**
     * How this field works and whether it is required depends on other fields you use in your API call. [See below](https://slack.dev) for more detail.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'text'?: string;
    /**
     * Provide another message\'s `ts` value to post this message in a thread. Avoid using a reply\'s `ts` value; use its parent\'s value instead. Ephemeral messages in threads are only shown if there is already an active thread.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'thread_ts'?: string;
    /**
     * `id` of the user who will receive the ephemeral message. The user should be in the channel specified by the `channel` argument.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'user': string;
    /**
     * Set your bot\'s user name. Must be used in conjunction with `as_user` set to false, otherwise ignored. See [authorship](https://slack.dev) below.
     * @type {string}
     * @memberof ChatPostEphemeralRequest
     */
    'username'?: string;
}

